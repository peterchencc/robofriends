{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Wrapper.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardsArray","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Wrapper","props","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAkBeA,EAhBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,yGAAf,UACE,qBACEA,UAAU,SACVC,IAAG,+BAA0BF,EAA1B,iBACHG,IAAI,WAEN,gCACE,oBAAIF,UAAU,UAAd,SAAyBH,IACzB,mBAAGG,UAAU,UAAb,SAAwBF,WCSjBK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OACE,cAAC,EAAD,CAEET,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAOX,OACE,qBAAKR,UAAU,wFAAf,SACGK,KCRQI,EANG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,uBAAOC,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,KCEhDI,EAJC,SAACC,GACf,OAAO,qBAAKhB,UAAU,OAAf,SAAuBgB,EAAMC,YCoBvBC,EArBf,kDACE,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXC,UAAU,GAJK,EADrB,qDASE,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,MAV9B,oBAaE,WACE,OAAIG,KAAKJ,MAAMC,SACN,qDAEFG,KAAKP,MAAMC,aAjBtB,GAAmCQ,aCyDpBC,E,kDApDb,aAAe,IAAD,8BACZ,gBAiBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEd,YAAakB,EAAMC,OAAOC,SAjB1C,EAAKX,MAAQ,CACXf,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBqB,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACL,EAAKX,SAAS,CAAEpB,OAAQ+B,S,oBAQ9B,WAAU,IAAD,EACyBZ,KAAKJ,MAA7Bf,EADD,EACCA,OAAQM,EADT,EACSA,YAEV0B,EAAiBhC,EAAOiC,QAAO,SAACC,GACpC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS9B,EAAY6B,kBAGvD,OAAQnC,EAAOqC,OAGb,sBAAKzC,UAAU,0DAAf,UACE,oBAAIA,UAAU,yBAAd,yBACA,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,CACEU,YAAaA,EACbC,aAAcY,KAAKI,mBAGvB,qBAAK3B,UAAU,OAAf,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUI,OAAQgC,aAb1B,6C,GA/BYX,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3757a668.chunk.js","sourcesContent":["import React from 'react'\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"w-full ring-1 ring-black ring-opacity-5 shadow-sm bg-gray-100 rounded-xl p-4 text-center flex flex-col\">\n      <img\n        className=\"w-auto\"\n        src={`https://robohash.org/${id}?size=200x200`}\n        alt=\"robots\"\n      />\n      <div>\n        <h2 className=\"text-sm\">{name}</h2>\n        <p className=\"text-xs\">{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n  const cardsArray = robots.map((user, i) => {\n    return (\n      <Card\n        key={i}\n        id={robots[i].id}\n        name={robots[i].name}\n        email={robots[i].email}\n      />\n    )\n  })\n  return (\n    <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 xl:grid-cols-5 gap-4 md:gap-6 xl:gap-8\">\n      {cardsArray}\n    </div>\n  )\n}\n\nexport default CardList\n","import React from 'react'\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <input type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\n\nconst Wrapper = (props) => {\n  return <div className=\"my-8\">{props.children}</div>\n}\n\nexport default Wrapper\n","import React, { Component } from 'react'\n\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasError: false,\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops. It has error.</h1>\n    }\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Wrapper from '../components/Wrapper'\nimport ErrorBoundary from '../components/ErrorBoundary'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      robots: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        return response.json()\n      })\n      .then((users) => {\n        this.setState({ robots: users })\n      })\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n\n  render() {\n    const { robots, searchField } = this.state\n\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"text-center bg-gradient-to-r from-green-400 to-blue-500\">\n        <h1 className=\"p-4 text-4xl font-bold\">RoboFriends</h1>\n        <div className=\"my-4\">\n          <SearchBox\n            searchField={searchField}\n            searchChange={this.onSearchChange}\n          />\n        </div>\n        <div className=\"mx-4\">\n          <Wrapper>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Wrapper>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}